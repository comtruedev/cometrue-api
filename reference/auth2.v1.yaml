openapi: 3.0.0
info:
  title: Face AiDee API
  version: 1.0.0
components:
  schemas:
    CreateKey:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    CreateToken:
      type: object
      properties:
        key:
          type: string
          format: uuid
        secret:
          type: string
    CreateUser:
      type: object
      properties:
        group_id:
          type: integer
        registrant:
          type: string
        status:
          type: string
        properties:
          type: object
    UpdateUser:
      type: object
      properties:
        group_id:
          type: integer
        registrant:
          type: string
        properties:
          type: object
    CreateFace:
      type: object
      properties:
        save_image:
          type: boolean
        image:
          type: string
          format: base64
    UpdateFace:
      type: object
      properties:
        save_image:
          type: boolean
        image:
          type: string
          format: base64
    SearchFace:
      type: object
      properties:
        condition:
          type: object
        image:
          type: string
          format: base64
    CheckinFace:
      type: object
      properties:
        condition:
          type: object
        option:
          type: integer
        image:
          type: string
          format: base64
paths:
  auth/key:
    post:
      operationId: createKey
      summary: API KEY 발급
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKey'
            examples:
              request:
                value:
                  username: test
                  password: $123$abadfo124393eo
      responses:
        '201':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    format: uuid
                  secret:
                    type: string
              examples:
                preview:
                  value:
                    key: 00000000-0000-0000-0000-000000000000
                    secret: 6E686506B4B2516CDFBC
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: API KEY 발급이 제한된 계정
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                access denied:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    parameters: []
  auth/token:
    post:
      operationId: createToken
      summary: API Token 발급
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateToken'
            examples:
              request:
                value:
                  key: 00000000-0000-0000-0000-000000000000
                  secret: 6E686506B4B2516CDFBC
      responses:
        '201':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  expire:
                    type: string
                    format: datetime
                  token:
                    type: string
                    format: jwt
              examples:
                preview:
                  value:
                    code: 200
                    expire: '2050-01-01T00:00:00+09:00'
                    token: header.payload.hash
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    patch:
      operationId: refreshToken
      summary: API Token 갱신
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  expire:
                    type: string
                    format: datetime
                  token:
                    type: string
                    format: jwt
              examples:
                preview:
                  value:
                    code: 200
                    expire: '2050-01-01T00:00:00+09:00'
                    token: header.payload.hash
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    delete:
      operationId: deleteToken
      summary: API Token 삭제
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
              examples:
                preview:
                  value:
                    code: 200
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  projects:
    get:
      operationId: listProjects
      summary: 모든 프로젝트 조회
      parameters:
        - name: X-API-Token
          in: header
          description: API 토큰
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    similarity:
                      type: integer
                    registration_period:
                      type: object
                      properties:
                        start:
                          type: string
                          format: datetime
                        end:
                          type: string
                          format: datetime
                    confirm_period:
                      type: object
                      properties:
                        start:
                          type: string
                          format: datetime
                        end:
                          type: string
                          format: datetime
                    user_properties:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          label:
                            type: string
                          key:
                            type: string
                          type:
                            type: string
                          options:
                            type: array
                            items:
                              type: string
                          unique:
                            type: boolean
                          required:
                            type: boolean
                          value:
                            type: string
                    customized_pages:
                      type: object
                      properties:
                        input_page:
                          type: object
                          properties:
                            title:
                              type: string
                            color:
                              type: string
                            start_message:
                              type: string
                            completion_message:
                              type: string
                            agreement_message:
                              type: string
                            link_Type:
                              type: integer
                            logo_image:
                              type: string
                            start_image:
                              type: string
                        photography_page:
                          type: object
                          properties:
                            use_guide:
                              type: boolean
                            completion_message:
                              type: string
                        comfirm_page:
                          type: object
                          properties:
                            save_image:
                              type: boolean
                            show_image:
                              type: boolean
                            confirm_message:
                              type: string
                            error_message:
                              type: string
                            input_property:
                              type: object
                              properties:
                                id:
                                  type: integer
                                label:
                                  type: string
                                key:
                                  type: string
                                type:
                                  type: string
                                options:
                                  type: array
                                  items:
                                    type: string
                                unique:
                                  type: boolean
                                required:
                                  type: boolean
                                value:
                                  type: string
                            buttons:
                              type: array
                              items:
                                type: object
                                properties:
                                  label:
                                    type: string
                                  text_color:
                                    type: string
                                  background_color:
                                    type: string
                    created_at:
                      type: string
                      format: datetime
              examples:
                preview:
                  value:
                    - id: 1
                      name: FIRST_PROJECT
                      similarity: 75
                      registration_period:
                        start: '2020-01-01T00:00:00.000000+09:00'
                        end: '2020-01-30T23:59:59.000000+09:00'
                      confirm_period:
                        start: '2020-01-01T00:00:00.000000+09:00'
                        end: '2020-01-30T23:59:59.000000+09:00'
                      user_properties:
                        - id: 7
                          label: 이메일
                          key: email
                          type: EMAIL
                          unique: true
                          required: true
                          value: ''
                        - id: 1
                          label: 성별
                          key: gender
                          type: RADIO
                          options:
                            - male
                            - female
                          unique: false
                          required: true
                          value: ''
                      customized_pages:
                        input_page:
                          title: TEST TITLE
                          color: '#ff0000'
                          start_message: 환영 합니다
                          completion_message: 등록 완료
                          aggreement_message: 약관 내용
                          link_type: 0
                          logo_image: <BASE64_ENCODED_IMAGE>
                          start_image: <BASE64_ENCODED_IMAGE>
                        photography_page:
                          use_guide: true
                          completion_message: 등록 승인이 완료되었습니다.
                        confirm_page:
                          save_image: true
                          show_image: true
                          confirm_message: '{name} 님의 확인이 완료 되었습니다.'
                          error_message: 확인에 실패하였습니다.
                          input_property:
                            id: 1
                            label: 성별
                            key: gender
                            type: RADIO
                            options:
                              - male
                              - female
                            unique: false
                            required: true
                            value: ''
                          buttons:
                            - label: 출근
                              text_color: '#ff0000'
                              background_color: '#00ff00'
                            - label: 퇴근
                              text_color: '#ff0000'
                              background_color: '#00ff00'
                      created_at: '2020-01-14T13:46:04.878963+09:00'
                    - id: 2
                      name: SECOND_PROJECT
                      similarity: 75
                      registration_period:
                        start: '2020-01-01T00:00:00.000000+09:00'
                        end: '2020-01-30T23:59:59.000000+09:00'
                      confirm_period:
                        start: '2020-01-01T00:00:00.000000+09:00'
                        end: '2020-01-30T23:59:59.000000+09:00'
                      user_properties:
                        - id: 7
                          label: 이메일
                          key: email
                          type: EMAIL
                          unique: true
                          required: true
                          value: ''
                        - id: 1
                          label: 성별
                          key: gender
                          type: RADIO
                          options:
                            - male
                            - female
                          unique: false
                          required: true
                          value: ''
                      customized_pages:
                        input_page:
                          title: TEST TITLE
                          color: '#ff0000'
                          start_message: 환영 합니다
                          completion_message: 등록 완료
                          aggreement_message: 약관 내용
                          link_type: 0
                          logo_image: <BASE64_ENCODED_IMAGE>
                          start_image: <BASE64_ENCODED_IMAGE>
                        photography_page:
                          use_guide: true
                          completion_message: 관리자의 승인 후 등록이 완료됩니다.
                        confirm_page:
                          save_image: true
                          show_image: true
                          confirm_message: '{name} 님의 확인이 완료 되었습니다.'
                          error_message: 확인에 실패하였습니다.
                          input_property:
                            id: 1
                            label: 성별
                            key: gender
                            type: RADIO
                            options:
                              - male
                              - female
                            unique: false
                            required: true
                            value: ''
                          buttons:
                            - label: 출근
                              text_color: '#ff0000'
                              background_color: '#00ff00'
                            - label: 퇴근
                              text_color: '#ff0000'
                              background_color: '#00ff00'
                      created_at: '2020-01-15T10:06:47.257317+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}':
    get:
      operationId: getProject
      summary: 프로젝트 조회
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  similarity:
                    type: integer
                  registration_period:
                    type: object
                    properties:
                      start:
                        type: string
                        format: datetime
                      end:
                        type: string
                        format: datetime
                  confirm_period:
                    type: object
                    properties:
                      start:
                        type: string
                        format: datetime
                      end:
                        type: string
                        format: datetime
                  user_properties:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        label:
                          type: string
                        key:
                          type: string
                        type:
                          type: string
                        options:
                          type: array
                          items:
                            type: string
                        unique:
                          type: boolean
                        required:
                          type: boolean
                        value:
                          type: string
                  customized_pages:
                    type: object
                    properties:
                      input_page:
                        type: object
                        properties:
                          title:
                            type: string
                          color:
                            type: string
                          start_message:
                            type: string
                          completion_message:
                            type: string
                          agreement_message:
                            type: string
                          link_Type:
                            type: integer
                          logo_image:
                            type: string
                          start_image:
                            type: string
                      photography_page:
                        type: object
                        properties:
                          use_guide:
                            type: boolean
                          completion_message:
                            type: string
                      comfirm_page:
                        type: object
                        properties:
                          save_image:
                            type: boolean
                          show_image:
                            type: boolean
                          confirm_message:
                            type: string
                          error_message:
                            type: string
                          input_property:
                            type: object
                            properties:
                              id:
                                type: integer
                              label:
                                type: string
                              key:
                                type: string
                              type:
                                type: string
                              options:
                                type: array
                                items:
                                  type: string
                              unique:
                                type: boolean
                              required:
                                type: boolean
                              value:
                                type: string
                          buttons:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                text_color:
                                  type: string
                                background_color:
                                  type: string
                  created_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 2
                    name: SECOND_PROJECT
                    similarity: 75
                    registration_period:
                      start: '2020-01-01T00:00:00.000000+09:00'
                      end: '2020-01-30T23:59:59.000000+09:00'
                    confirm_period:
                      start: '2020-01-01T00:00:00.000000+09:00'
                      end: '2020-01-30T23:59:59.000000+09:00'
                    user_properties:
                      - id: 7
                        label: 이메일
                        key: email
                        type: EMAIL
                        unique: true
                        required: true
                        value: ''
                      - id: 1
                        label: 성별
                        key: gender
                        type: RADIO
                        options:
                          - male
                          - female
                        unique: false
                        required: true
                        value: ''
                    customized_pages:
                      input_page:
                        title: TEST TITLE
                        color: '#ff0000'
                        start_message: 환영 합니다
                        completion_message: 등록 완료
                        aggreement_message: 약관 내용
                        link_type: 0
                        logo_image: <BASE64_ENCODED_IMAGE>
                        start_image: <BASE64_ENCODED_IMAGE>
                      photography_page:
                        use_guide: true
                        completion_message: 관리자의 승인 후 등록이 완료됩니다.
                      confirm_page:
                        save_image: true
                        show_image: true
                        confirm_message: '{name} 님의 확인이 완료 되었습니다.'
                        error_message: 확인에 실패하였습니다.
                        input_property:
                          id: 1
                          label: 성별
                          key: gender
                          type: RADIO
                          options:
                            - male
                            - female
                          unique: false
                          required: true
                          value: ''
                        buttons:
                          - label: 출근
                            text_color: '#ff0000'
                            background_color: '#00ff00'
                          - label: 퇴근
                            text_color: '#ff0000'
                            background_color: '#00ff00'
                    created_at: '2020-01-15T10:06:47.257317+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/users':
    post:
      operationId: createUser
      summary: 유저 생성
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
            examples:
              request:
                value:
                  group_id: 1
                  registrant: USER
                  status: UNAPPROVED
                  properties:
                    name: 테스트
                    gender: male
                    email: test@test.com
      responses:
        '201':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 1
                    created_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/users/{user_id}':
    patch:
      operationId: updateUser
      summary: 유저 수정
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
            examples:
              request:
                value:
                  group_id: 1
                  registrant: USER
                  properties:
                    name: 테스트
                    gender: male
                    email: test@test.com
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 1
                    updated_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    delete:
      operationId: deleteUser
      summary: 유저 삭제
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 1
                    deleted_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/users/{user_id}/faces':
    get:
      operationId: getFaces
      summary: 대상의 모든 얼굴 조회
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    image:
                      type: string
                      format: base64
                    created_at:
                      type: string
                      format: datetime
              examples:
                delete:
                  value:
                    - id: 1
                      image: <BASE64_ENCODED_IMAGE>
                      created_at: '2020-01-01T12:00:00.000000000+09:00'
                    - id: 2
                      image: <BASE64_ENCODED_IMAGE>
                      created_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    delete:
      operationId: deleteFaces
      summary: 대상의 모든 얼굴 삭제
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  cleared_at:
                    type: string
                    format: datetime
              examples:
                delete:
                  value:
                    user_id: 1
                    deleted_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    post:
      operationId: createFace
      summary: 얼굴 생성
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFace'
            examples:
              request:
                value:
                  save_image: true
                  image: <BASE64_ENCODED_IMAGE>
      responses:
        '201':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  created_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 4
                    created_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: face not found
                small face:
                  value:
                    reason: face is small
                big face:
                  value:
                    reason: face is big
                not center:
                  value:
                    reason: face is not center
                not front:
                  value:
                    reason: face not front
                blurry image:
                  value:
                    reason: blurry image
                low brightness:
                  value:
                    reason: brightness is low
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/users/{user_id}/faces/{face_id}':
    get:
      operationId: getFace
      summary: 얼굴 조회
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
        - name: face_id
          in: path
          description: 얼굴 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                    format: base64
                  created_at:
                    type: string
                    format: datetime
              examples:
                delete:
                  value:
                    id: 1
                    image: <BASE64_ENCODED_IMAGE>
                    created_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저 혹은 얼굴을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                user not found:
                  value:
                    reason: user not found
                face not found:
                  value:
                    reason: face not found
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    patch:
      operationId: updateFace
      summary: 얼굴 수정
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
        - name: face_id
          in: path
          description: 얼굴 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFace'
            examples:
              request:
                value:
                  save_image: true
                  image: <BASE64_ENCODED_IMAGE>
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  updated_at:
                    type: string
                    format: datetime
              examples:
                preview:
                  value:
                    id: 1
                    updated_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: face not found
                small face:
                  value:
                    reason: face is small
                big face:
                  value:
                    reason: face is big
                not center:
                  value:
                    reason: face is not center
                not front:
                  value:
                    reason: face not front
                blurry image:
                  value:
                    reason: blurry image
                low brightness:
                  value:
                    reason: brightness is low
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저 혹은 얼굴을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                user not found:
                  value:
                    reason: user not found
                face not found:
                  value:
                    reason: face not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
    delete:
      operationId: deleteFace
      summary: 얼굴 삭제
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          description: 유저 식별자
          required: true
          schema:
            type: integer
        - name: face_id
          in: path
          description: 얼굴 식별자
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  deleted_at:
                    type: string
                    format: datetime
              examples:
                delete:
                  value:
                    id: 1
                    deleted_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저 혹은 얼굴을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                user not found:
                  value:
                    reason: user not found
                face not found:
                  value:
                    reason: face not found
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/check-in':
    post:
      operationId: checkinFace
      summary: 얼굴 체크인
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckinFace'
            examples:
              request:
                value:
                  condition:
                    user_id: 1
                  option: 3
                  image: <BASE64_ENCODED_IMAGE>
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  matched:
                    type: boolean
                  similarity:
                    type: number
                    format: float
                  searched_at:
                    type: string
                    format: datetime
              examples:
                success:
                  value:
                    user_id: 4
                    status: APPROVED
                    similarity: 90.3
                    checkin_at: '2020-01-01T12:00:00.000000000+09:00'
                failure:
                  value:
                    user_id: 2
                    status: UNAPPROVED
                    similarity: 5.1
                    checkin_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: face not found
                small face:
                  value:
                    reason: face is small
                big face:
                  value:
                    reason: face is big
                not center:
                  value:
                    reason: face is not center
                not front:
                  value:
                    reason: face not front
                blurry image:
                  value:
                    reason: blurry image
                low brightness:
                  value:
                    reason: brightness is low
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
  'projects/{project_id}/_search':
    post:
      operationId: searchFace
      summary: 얼굴 탐색
      parameters:
        - name: X-API-Token
          in: header
          description: 인증 토큰
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: 프로젝트 식별자
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFace'
            examples:
              requestByUserId:
                value:
                  condition:
                    user_id: 1
                  image: <BASE64_ENCODED_IMAGE>
              requestByNameKey:
                value:
                  condition:
                    name: 테스트
                  image: <BASE64_ENCODED_IMAGE>
      responses:
        '200':
          description: 올바른 요청 처리
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  matched:
                    type: boolean
                  similarity:
                    type: number
                    format: float
                  searched_at:
                    type: string
                    format: datetime
              examples:
                success:
                  value:
                    user_id: 4
                    matched: true
                    similarity: 90.3
                    searched_at: '2020-01-01T12:00:00.000000000+09:00'
                failure:
                  value:
                    user_id: 2
                    matched: false
                    similarity: 5.1
                    searched_at: '2020-01-01T12:00:00.000000000+09:00'
        '400':
          description: 잘못된 입력 값
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: face not found
                small face:
                  value:
                    reason: face is small
                big face:
                  value:
                    reason: face is big
                not center:
                  value:
                    reason: face is not center
                not front:
                  value:
                    reason: face not front
                blurry image:
                  value:
                    reason: blurry image
                low brightness:
                  value:
                    reason: brightness is low
                invalid input:
                  value:
                    reason: 에러에 대한 내용
        '401':
          description: 허가 되지 않은 인증 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: invalid authentication
        '403':
          description: 해당 프로젝트에 대한 권한이 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: invalid access
        '404':
          description: 등록된 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                not found:
                  value:
                    reason: user not found
        '409':
          description: 올바른 입력이지만 조건에 부합하지 않음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                unauthorized:
                  value:
                    reason: 에러에 대한 내용
        '500':
          description: 서버 측 처리 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
              examples:
                server error:
                  value:
                    reason: 에러에 대한 내용
servers:
  - url: 'https://api.comtrue.com/v1'
    description: ''
