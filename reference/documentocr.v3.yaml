openapi: 3.0.0
x-stoplight:
  id: yamxzjj7mlinr
info:
  title: 문서 OCR
  version: '3.0'
  description: |-
    **서비스 소개**

    컴트루테크놀로지의 인공지능 OCR 신경망을 활용한 문서 OCR 서비스 입니다.<br>
    국내에서 사용되는 문서(사업자등록증)에 대한 개인정보 OCR을 수행합니다. 

    **서비스 특징**

    자체개발 OCR 신경망을 적용하여 OCR이 필요한 영역에 대해 정확한 인식을 수행합니다.<br>
    신분증 진위확인 서비스와 연계하여 사용할 수 있습니다.
  contact:
    email: ask@comtrue.com
    url: 'https://cometrue.ai'
    name: cometrue.ai AI API
  termsOfService: 'https://cometrue.ai/index.php/ai-api-terms-of-service/'
servers:
  - description: Cometrue
    url: 'https://api.cometrue.ai'
paths:
  /api/v3/document/ocr:
    post:
      summary: 문서 OCR
      operationId: post-documentocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  business_loc:
                    type: string
                    minLength: 1
                    description: 사업장소재지
                  business_type:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    description: 사업의종류
                    items:
                      type: object
                      properties:
                        detail:
                          type: string
                          minLength: 1
                          description: 업태
                        main:
                          type: string
                          minLength: 1
                          description: 종목
                      required:
                        - detail
                        - main
                  ceo_name_corp:
                    type: string
                    minLength: 1
                    description: 대표자
                  company_name_corp:
                    type: string
                    minLength: 1
                    description: 법인명(단체명)
                  email_for_etax:
                    type: string
                    description: 전자세금계산서 전용 전자우편주소
                  head_office_loc:
                    type: string
                    minLength: 1
                    description: 본점소재지
                  issue_authority:
                    type: string
                    minLength: 1
                    description: 발급기관
                  issue_date:
                    type: string
                    minLength: 1
                    description: 발급일
                  issue_reason:
                    type: string
                    minLength: 1
                    description: 발급사유
                  opening_date:
                    type: string
                    minLength: 1
                    description: 개업연월일
                  reg_num:
                    type: string
                    description: 등록번호
                  reg_num_corp:
                    type: string
                    minLength: 1
                    description: 법인등록번호
                  taxable_business:
                    type: string
                    minLength: 1
                    description: 사업자 단위 과세 적용사업자 여부
                required:
                  - business_loc
                  - business_type
                  - ceo_name_corp
                  - company_name_corp
                  - email_for_etax
                  - head_office_loc
                  - issue_authority
                  - issue_date
                  - issue_reason
                  - opening_date
                  - reg_num
                  - reg_num_corp
                  - taxable_business
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        문서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
        - 지원하는 문서는 사업자등록증, 기본증명서, 가족관계증명서, 혼인관계증명서, 입양관계증명서, 친양자입양관계증명서 입니다
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                doc_type:
                  type: string
                  description: |-
                    신분증 종류

                    사업자등록증-`business`
                    주민등록표초본-`chobon`
                    주민등록표등본-`deungbon`
                    기본증명서-`basic`
                    가족관계증명서-`family`
                    혼인관계증명서-`marriage`
                    친양자입양관계증명서-`paternal_adopt`
                    입양관계증명서-`adopt`
                  enum:
                    - business
                    - basic
                    - family
                    - marriage
                    - paternal_adopt
                    - adopt
                    - chobon
                    - deungbon
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  type: integer
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
              required:
                - doc_type
                - image
            examples:
              Base64 Example:
                value:
                  doc_type: business
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                doc_type:
                  type: string
                  minLength: 1
                  description: |-
                    신분증 종류

                    사업자등록증-`business`
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: integer
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  enum:
                    - 0
                    - 1
                    - 2
                  default: 2
              required:
                - doc_type
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/business/ocr:
    post:
      summary: 사업자등록증 OCR
      operationId: post-businessocr
      responses:
        '200':
          description: |-
            OK

            정상응답

            status가 -1일 경우 제공되는 에러메세지는 다음과 같습니다.
            <details markdown="1">
            <summary>세부정보</summary>
            <table border="1" align="center">
            <th>message</th>
            <th>설명</th>

            <tr>
            <td>System error: 100</td>
            <td>서버 내부에 오류가 발생했습니다.</td>
            </tr>

            <tr>
            <td>Invalid request: 107</td>
            <td>잘못된 파라미터를 사용했습니다.</td>
            </tr>

            <tr>
            <td>Invalid image file: 108</td>
            <td>읽을 수 없는 이미지 파일입니다.</td>
            </tr>

            <tr>
            <td>Text detection failed: 201</td>
            <td>이미지에서 인식 가능한 텍스트를 찾지 못했습니다.</td>
            </tr>

            <tr>
            <td>OCR Validation Failed: 502</td>
            <td>OCR 결과가 잘못되었습니다.</td>
            </tr>

            </table>

            </details>
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 상태
                  message:
                    type: string
                    description: API 메세지
                  result:
                    type: object
                    description: 결과
                    properties:
                      business_loc:
                        type: string
                        minLength: 1
                        description: 사업장소재지
                      business_type:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        description: 사업의종류
                        items:
                          type: object
                          properties:
                            detail:
                              type: string
                              minLength: 1
                              description: 업태
                            main:
                              type: string
                              minLength: 1
                              description: 종목
                          required:
                            - detail
                            - main
                      ceo_name_corp:
                        type: string
                        minLength: 1
                        description: 대표자
                      company_name_corp:
                        type: string
                        minLength: 1
                        description: 법인명(단체명)
                      email_for_etax:
                        type: string
                        description: 전자세금계산서 전용 전자우편주소
                      head_office_loc:
                        type: string
                        minLength: 1
                        description: 본점소재지
                      issue_authority:
                        type: string
                        minLength: 1
                        description: 발급기관
                      issue_date:
                        type: string
                        minLength: 1
                        description: 발급일
                      issue_reason:
                        type: string
                        minLength: 1
                        description: 발급사유
                      opening_date:
                        type: string
                        minLength: 1
                        description: 개업연월일
                      reg_num:
                        type: string
                        description: 등록번호
                      reg_num_corp:
                        type: string
                        minLength: 1
                        description: 법인등록번호
                      taxable_business:
                        type: string
                        minLength: 1
                        description: 사업자 단위 과세 적용사업자 여부
              examples:
                사업자등록증:
                  value:
                    status: 0
                    message: OK
                    result:
                      business_loc: 서울특별시 마포구 성암로 330. A동 4층 410호(상암동 DMC첨단산업센터)
                      business_type:
                        - detail: 스프트웨어자문개발및공급업
                          main: 서비스
                        - detail: 전자기기
                          main: 제조업
                        - detail: 전자상거래
                          main: 소매
                        - detail: 데이타베이스업
                          main: 서비스
                      ceo_name_corp: 박노현
                      company_name_corp: (주)컴트루테크놀로지
                      email_for_etax: comtrue@hometax.go.kr
                      head_office_loc: 서울특별시 마포구 성암로 330 A동 4층 410호(상암동 DMC청단산업센터)
                      issue_authority: 마포세무서장
                      issue_date: 2019 년 OO 월 OO 일
                      issue_reason: 정정
                      opening_date: ''
                      reg_num: 220-81-43863
                      reg_num_corp: 110111-1399876
                      taxable_business: X
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        사업자등록증을 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/basic/ocr:
    post:
      summary: 기본증명서 OCR
      operationId: post-basicocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_type:
                    type: string
                    description: 문서종류
                  issue_date:
                    type: string
                    description: 발급일
                  issue_type:
                    type: string
                    description: 구분
                    enum:
                      - 일반
                      - 상세
                      - 특정
                  person_concerned:
                    type: object
                    description: 발급자 정보
                    properties:
                      gender:
                        type: string
                        description: 성별
                      name:
                        type: string
                        description: 성명
                      number:
                        type: string
                        description: 나이
                      relation:
                        type: string
                        description: 관계
                  place_of_registration:
                    type: string
                    description: 등록기준지
                  family:
                    type: array
                    description: 가족사항
                    items:
                      type: object
                      properties:
                        gender:
                          type: string
                          description: 성별
                        name:
                          type: string
                          description: 이름
                        number:
                          type: string
                          description: 주민등록번호
                        relation:
                          type: string
                          description: 관계
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        기본증명서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/family/ocr:
    post:
      summary: 가족관계증명서 OCR
      operationId: post-familyocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_type:
                    type: string
                    description: 문서종류
                  issue_date:
                    type: string
                    description: 발급일
                  issue_type:
                    type: string
                    description: 구분
                    enum:
                      - 일반
                      - 상세
                      - 특정
                  person_concerned:
                    type: object
                    description: 발급자 정보
                    properties:
                      gender:
                        type: string
                        description: 성별
                      name:
                        type: string
                        description: 성명
                      number:
                        type: string
                        description: 나이
                      relation:
                        type: string
                        description: 관계
                  place_of_registration:
                    type: string
                    description: 등록기준지
                  family:
                    type: array
                    description: 가족사항
                    items:
                      type: object
                      properties:
                        gender:
                          type: string
                          description: 성별
                        name:
                          type: string
                          description: 이름
                        number:
                          type: string
                          description: 주민등록번호
                        relation:
                          type: string
                          description: 관계
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        기본증명서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/marriage/ocr:
    post:
      summary: 혼인관계증명서 OCR
      operationId: post-marriageocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_type:
                    type: string
                    description: 문서종류
                  issue_date:
                    type: string
                    description: 발급일
                  issue_type:
                    type: string
                    description: 구분
                    enum:
                      - 일반
                      - 상세
                      - 특정
                  person_concerned:
                    type: object
                    description: 발급자 정보
                    properties:
                      gender:
                        type: string
                        description: 성별
                      name:
                        type: string
                        description: 성명
                      number:
                        type: string
                        description: 나이
                      relation:
                        type: string
                        description: 관계
                  place_of_registration:
                    type: string
                    description: 등록기준지
                  family:
                    type: array
                    description: 가족사항
                    items:
                      type: object
                      properties:
                        gender:
                          type: string
                          description: 성별
                        name:
                          type: string
                          description: 이름
                        number:
                          type: string
                          description: 주민등록번호
                        relation:
                          type: string
                          description: 관계
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        혼인관계증명서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/paternal-adopt/ocr:
    post:
      summary: 친양자입양관계증명서 OCR
      operationId: post-paternaladoptocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_type:
                    type: string
                    description: 문서종류
                  issue_date:
                    type: string
                    description: 발급일
                  issue_type:
                    type: string
                    description: 구분
                    enum:
                      - 일반
                      - 상세
                      - 특정
                  person_concerned:
                    type: object
                    description: 발급자 정보
                    properties:
                      gender:
                        type: string
                        description: 성별
                      name:
                        type: string
                        description: 성명
                      number:
                        type: string
                        description: 나이
                      relation:
                        type: string
                        description: 관계
                  place_of_registration:
                    type: string
                    description: 등록기준지
                  family:
                    type: array
                    description: 가족사항
                    items:
                      type: object
                      properties:
                        gender:
                          type: string
                          description: 성별
                        name:
                          type: string
                          description: 이름
                        number:
                          type: string
                          description: 주민등록번호
                        relation:
                          type: string
                          description: 관계
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        친양자입양관계증명서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/adopt/ocr:
    post:
      summary: 입양관계증명서 OCR
      operationId: post-adptocr
      responses:
        '200':
          description: |-
            OK
            정상응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_type:
                    type: string
                    description: 문서종류
                  issue_date:
                    type: string
                    description: 발급일
                  issue_type:
                    type: string
                    description: 구분
                    enum:
                      - 일반
                      - 상세
                      - 특정
                  person_concerned:
                    type: object
                    description: 발급자 정보
                    properties:
                      gender:
                        type: string
                        description: 성별
                      name:
                        type: string
                        description: 성명
                      number:
                        type: string
                        description: 나이
                      relation:
                        type: string
                        description: 관계
                  place_of_registration:
                    type: string
                    description: 등록기준지
                  family:
                    type: array
                    description: 가족사항
                    items:
                      type: object
                      properties:
                        gender:
                          type: string
                          description: 성별
                        name:
                          type: string
                          description: 이름
                        number:
                          type: string
                          description: 주민등록번호
                        relation:
                          type: string
                          description: 관계
              examples: {}
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        입양관계증명서를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/chobon/ocr:
    post:
      summary: 주민등록표(초본) OCR
      operationId: post-chobonocr
      responses:
        '200':
          description: |-
            OK

            정상응답

            status가 -1일 경우 제공되는 에러메세지는 다음과 같습니다.
            <details markdown="1">
            <summary>세부정보</summary>
            <table border="1" align="center">
            <th>message</th>
            <th>설명</th>

            <tr>
            <td>System error: 100</td>
            <td>서버 내부에 오류가 발생했습니다.</td>
            </tr>

            <tr>
            <td>Invalid request: 107</td>
            <td>잘못된 파라미터를 사용했습니다.</td>
            </tr>

            <tr>
            <td>Invalid image file: 108</td>
            <td>읽을 수 없는 이미지 파일입니다.</td>
            </tr>

            <tr>
            <td>Text detection failed: 201</td>
            <td>이미지에서 인식 가능한 텍스트를 찾지 못했습니다.</td>
            </tr>

            <tr>
            <td>OCR Validation Failed: 502</td>
            <td>OCR 결과가 잘못되었습니다.</td>
            </tr>

            </table>

            </details>
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 상태
                  message:
                    type: string
                    description: API 에러메세지
                  result:
                    type: object
                    description: 결과
                    properties:
                      address:
                        type: object
                        description: 주소
                        properties:
                          address:
                            type: string
                            description: 주소
                          date_of_event:
                            type: string
                            description: 발생일
                          date_of_report:
                            type: string
                            description: 신고일
                      id_number:
                        type: string
                        description: 주민등록번호
                      issue_date:
                        type: string
                        description: 발급일
                      name:
                        type: string
                        description: 성명
              examples:
                초본:
                  value:
                    status: 0
                    message: OK
                    result:
                      address:
                        address: 경기도 수원시 팔달구 영통등 913-3 벽적골 두산아파트
                        date_of_report: '2000-06-26'
                      id_number: 950619-
                      issue_date: 2020년 04월 07일
                      name: 김OO
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        주민등록표(초본)를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
  /api/v3/deugbon/ocr:
    post:
      summary: 주민등록표(등본) OCR
      operationId: post-deugbonocr
      responses:
        '200':
          description: |-
            OK

            정상응답

            status가 -1일 경우 제공되는 에러메세지는 다음과 같습니다.
            <details markdown="1">
            <summary>세부정보</summary>
            <table border="1" align="center">
            <th>message</th>
            <th>설명</th>

            <tr>
            <td>System error: 100</td>
            <td>서버 내부에 오류가 발생했습니다.</td>
            </tr>

            <tr>
            <td>Invalid request: 107</td>
            <td>잘못된 파라미터를 사용했습니다.</td>
            </tr>

            <tr>
            <td>Invalid image file: 108</td>
            <td>읽을 수 없는 이미지 파일입니다.</td>
            </tr>

            <tr>
            <td>Text detection failed: 201</td>
            <td>이미지에서 인식 가능한 텍스트를 찾지 못했습니다.</td>
            </tr>

            <tr>
            <td>OCR Validation Failed: 502</td>
            <td>OCR 결과가 잘못되었습니다.</td>
            </tr>

            </table>

            </details>
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 상태
                  message:
                    type: string
                    description: API 에러메세지
                  result:
                    type: object
                    description: 결과
                    properties:
                      address:
                        type: object
                        description: 주소
                        properties:
                          address:
                            type: string
                            description: 현주소
                          date_of_event:
                            type: string
                            description: 발생일
                          date_of_report:
                            type: string
                            description: 신고일
                          reason_for_change:
                            type: string
                            description: 변동사유
                      household:
                        type: object
                        description: 세대주
                        properties:
                          date_of_composition:
                            type: string
                            description: 세대구성일자
                          householder:
                            type: string
                            description: 세대주 성명
                          reason_for_composition:
                            type: string
                            description: 변동사유
                      issue_date:
                        type: string
                        description: 발급일
                      members:
                        type: array
                        description: 구성원
                        items:
                          type: object
                          properties:
                            date_of_event:
                              type: string
                              description: 발생일
                            date_of_report:
                              type: string
                              description: 신고일
                            id_number:
                              type: string
                              description: 주민등록번호
                            name:
                              type: string
                              description: 성명
                            number:
                              type: string
                              description: 번호
                            reason_for_change:
                              type: string
                              description: 변동사유
                            registration_status:
                              type: string
                              description: 등록상태
                            relation:
                              type: string
                              description: 세대주 관계
              examples:
                등본:
                  value:
                    status: 0
                    message: OK
                    result:
                      address:
                        address: '서울특별시 마포구 월드컵북로54길 17, 1304호 (상암동,사보이시티디엠씨)'
                        date_of_event: '2019-11-13'
                        date_of_report: '2019-11-13'
                        reason_for_change: 전입
                      household:
                        date_of_composition: '2019-11-13'
                        householder: 김OO
                        reason_for_composition: 전입
                      issue_date: 2021년 05월 30일
                      members:
                        - date_of_event: '2019-11-13'
                          date_of_report: '2019-11-13'
                          id_number: 950619-2******
                          name: 김OO
                          number: '1'
                          reason_for_change: 전입
                          registration_status: 거주자
                          relation: 본인
        '400':
          $ref: '#/components/responses/400_id-ocr'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '409':
          $ref: '#/components/responses/409'
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: |-
        주민등록표(등본)를 인식 후 정보를 추출하여 제공합니다.

        **주의사항**

        - 문서 이미지는 회전되지 않고, 패딩이 없어야 합니다.
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                image:
                  type: string
                  minLength: 1
                  description: |-
                    이미지를 base64로 인코딩 한 스트링

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                option:
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                  type: number
              required:
                - image
            examples:
              Base64 Example:
                value:
                  image: iVBORw0KGgoAAAANSUhEUgAACbEAAA2zCAYAAADce6KLAAAA....
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                image:
                  description: |-
                    멀티파트 이미지파일

                    지원포맷: jpg(jpeg), png, tif(tiff), bmp
                  type: string
                option:
                  type: number
                  description: |-
                    0 : 사용하지 않음
                    1 : 앵글넷(권장하지 않음)
                    2 : 회전 신경망 사용(권장)
              required:
                - image
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
    parameters: []
components:
  schemas: {}
  securitySchemes: {}
  responses:
    '400':
      description: |
        Bad Request

        사용자가 키를 잘못 입력하였거나, 값에 문제가 있을때

        <details markdown="1">
        <summary>세부정보</summary>
        <table>
        <th>message</th>
        <th>설명</th>

        <tr>
        <td>image not provided</td>
        <td>image 키값이 존재하지 않음</td>
        </tr>

        <tr>
        <td>image base64 decode error</td>
        <td>base64 디코드 에러</td>
        </tr>

        <tr>
        <td>Image is empty</td>
        <td>이미지가 비어있음</td>
        </tr>

        <tr>
        <td>request format or type is not valid</td>
        <td>요청형식이나 Content-Type이 올바르지 않음</td>
        </tr>
        </table>
        </details>
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            image not given:
              value:
                message: 'image: not provided'
            base64 decoding of the image failed:
              value:
                message: image base64 decode error
            Image not readable:
              value:
                message: Image cannot be read
            Query image is too small to process:
              value:
                message: Image is too small to process
            request format or type is not valid:
              value:
                message: request format or type is not valid
            image empty:
              value:
                message: Image is empty
    '409':
      description: |-
        Conflict

        서버에서의 처리 중 에러

        <details markdown="1">
        <summary>에러메세지</summary>
        "Onnx runtime error: 100"<br>
        "Std Exception: 101"<br>
        "OpenCV error: 100"<br>
        "text detection error: 201": cannot find text<br>
        "text detection error: 202": Vertex detection error<br>
        "text detection error: 203": cannot find square<br>
        "text detection error: 204": not enough to be square<br>
        "text detection error: 207": not enough contour<br>
        "text detection error: 208": not enough group<br>
        "object detection error: 209": cannot find object<br>
        "Json decode error"
        </details>
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            Vertex detection error:
              value:
                message: 'text detection error: 202'
            Text detection error:
              value:
                message: text detection error
            //OCR error:
              value:
                message: text recognition error
            //Matching error:
              value:
                message: matching error
            onnxexception:
              value:
                message: 'Onnx runtime error: 100'
            stdexception:
              value:
                message: 'Std Exception: 101'
            cvexception:
              value:
                message: 'OpenCV error: 100'
            cannot find text:
              value:
                message: 'text detection error: 201'
            cannot find square:
              value:
                message: 'text detection error: 203'
            not enough to be square:
              value:
                message: 'text detection error: 204'
            not enough contour:
              value:
                message: 'text detection error: 207'
            not enough group:
              value:
                message: 'text detection error: 208'
            cannot find object:
              value:
                message: 'object detection error: 209'
            json decode error:
              value:
                message: Json decode error
    ErrorResponse:
      description: 신분증 인식 및 OCR에 대한 Error Message
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
            required:
              - message
    400_id-ocr:
      description: |
        Bad Request

        사용자가 키를 잘못 입력하였거나, 값에 문제가 있을때

        <details markdown="1">
        <summary>세부정보</summary>
        <table>
        <th>message</th>
        <th>설명</th>

        <tr>
        <td>image not provided</td>
        <td>image 키값이 존재하지 않음</td>
        </tr>

        <tr>
        <td>image base64 decode error</td>
        <td>base64 디코드 에러</td>
        </tr>

        <tr>
        <td>Image is empty</td>
        <td>이미지가 비어있음</td>
        </tr>

        <tr>
        <td>request format or type is not valid</td>
        <td>요청형식이나 Content-Type이 올바르지 않음</td>
        </tr>
        </table>
        </details>
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            id_type not given:
              value:
                message: id_type not provided
            image not given:
              value:
                message: 'image: not provided'
            base64 decoding of the image failed:
              value:
                message: image base64 decode error
            Unsupported ID:
              value:
                message: Unsupported ID type
            Image not readable:
              value:
                message: Image cannot be read
            Query image is too small to process:
              value:
                message: Image is too small to process
            id_type not correct:
              value:
                message: 'id_type: is not correct.'
            request format or type is not valid:
              value:
                message: request format or type is not valid
            image empty:
              value:
                message: Image is empty
    409-passport:
      description: |-
        Conflict

        서버에서의 처리 중 에러

        <details markdown="1">
        <summary>에러메세지</summary>
        "Onnx runtime error: 100"<br>
        "Std Exception: 101"<br>
        "OpenCV error: 100"<br>
        "text detection error: 201": cannot find text<br>
        "text detection error: 202": Vertex detection error<br>
        "text detection error: 203": cannot find square<br>
        "text detection error: 204": not enough to be square<br>
        "text detection error: 205": cannot find MRZ<br>
        "text detection error: 207": not enough contour<br>
        "text detection error: 208": not enough group<br>
        "object detection error: 209": cannot find object<br>
        "Json decode error"
        </details>
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            Vertex detection error:
              value:
                message: 'text detection error: 202'
            Text detection error:
              value:
                message: text detection error
            //OCR error:
              value:
                message: text recognition error
            //Matching error:
              value:
                message: matching error
            onnxexception:
              value:
                message: 'Onnx runtime error: 100'
            stdexception:
              value:
                message: 'Std Exception: 101'
            cvexception:
              value:
                message: 'OpenCV error: 100'
            cannot find text:
              value:
                message: 'text detection error: 201'
            cannot find square:
              value:
                message: 'text detection error: 203'
            not enough to be square:
              value:
                message: 'text detection error: 204'
            not enough contour:
              value:
                message: 'text detection error: 207'
            not enough group:
              value:
                message: 'text detection error: 208'
            cannot find object:
              value:
                message: 'object detection error: 209'
            json decode error:
              value:
                message: Json decode error
            cannot find MRZ:
              value:
                message: 'text detection error: 205'
