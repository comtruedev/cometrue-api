openapi: 3.0.0
info:
  title: 1원인증
  version: '1.0'
  description: |
    **서비스 소개**

    비대면 본인확인 방식 중 기존계좌의 활용 방식을 지원하는 API 입니다.

    기존계좌의 활용이란 고객이 기존에 개설한 계좌를 현재 소유중인지 확인하는 방식입니다. 

    고객이 기존에 보유한 본인 계좌에 1원을 송금하고 통장에 적힌 송금인정보을 기입함으로써 계좌 소유여부를 확인할 수 있습니다.

    해당 송금인정보은 본인확인을 위한 OTP로 활용되며, 다양한 방식의 랜덤코드를 선택하여 적용할 수 있습니다.
     

    - 계좌번호와 계좌주명이 일치하지 않는 경우 1원이 송금되지 않습니다.
    - 부정사용방지를 위하여 1일 5회 이상 동일 계좌번호/계좌주명으로 송금 요청 시 송금요청이 차단됩니다.
    - **1원 인증 서비스 제공 시 고객정보(은행명, 계좌번호, 계좌주성명)는 입금이체 시 1회성 으로 활용되며 별도 저장되지 않고 바로 삭제됩니다.**
  contact:
    email: ask@comtrue.com
    url: 'https://cometrue.ai'
    name: cometrue.ai AI API
  termsOfService: 'https://cometrue.ai/index.php/ai-api-terms-of-service/'
servers:
  - url: 'https://api.cometrue.ai'
paths:
  /api/v1/1won/deposit:
    post:
      summary: 1원인증
      operationId: post-privacy-check
      responses:
        '200':
          description: |-
            OK

            정상응답
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: string
                    minLength: 1
                    description: 상태
                    enum:
                      - success
                      - fail
                  auth_code:
                    type: string
                    example: 일원인증332
                    description: 송금인정보
                required:
                  - status
              examples:
                결과:
                  value:
                    status: success
                    auth_code: 일원인증2967
        '400':
          $ref: '#/components/responses/400'
        '401':
          description: |-
            Unauthorized

            허가되지 않은 사용자의 접근
        '500':
          description: |-
            Internal Server Error

            서버가 유지보수 중이거나 응답할 수 없는 상태
      description: "요청계좌에 1원을 송금후 송금인정보를 제공합니다.\n\n**기관 코드**\n\n기관 코드는 [오픈뱅킹API](https://developers.kftc.or.kr/dev/doc/open-banking) 에서 제공하는 **3.3 금융기관코드**를 기반으로 제공됩니다.\n\n기관 코드 정보는 아래와 같습니다.\n\n|기관코드|기관명|기관코드|기관명|기관코드|기관명|\n|:--:|:------------------:|:--:|:---------------------:|:--:|:--------------:|\n|2|\tKDB산업은행\t|23|\tSC제일은행\t|37|\t전북은행|\n|3|\tIBK기업은행\t|27|\t한국씨티은행\t|39|\t경남은행|\n|4|\tKB국민은행\t|31|\t대구은행\t        |81|\t하나은행|\n|7|\t수협은행\t        |32|\t부산은행\t        |88|\t신한은행|\n|11|\tNH농협은행\t|34|\t광주은행\t        |89|\t케이뱅크|\n|20|\t우리은행\t        |35|\t제주은행\t        |90|\t카카오뱅크|\n"
      parameters:
        - schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Njk3ODI4MzgsImxpY2Vuc2UiOiJiODU1Yzc....
          in: header
          name: Authorization
          description: 계정 인증을 통해 발급 받은 Access token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                organization_code:
                  type: string
                  minLength: 1
                  description: 기관코드
                  maxLength: 3
                account:
                  type: string
                  minLength: 1
                  description: 계좌번호
                account_name:
                  type: string
                  minLength: 1
                  description: 예금주 이름
                print_type:
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                  description: |-
                    송금인정보 옵션

                    0: 3자리숫자

                    1: 4자리숫자 

                    2: 고정문자열 + 3자리숫자

                    3: 고정문자열 + 4자리숫자

                    4: 3자리숫자 + 고정문자열

                    5: 4자리숫자 + 고정문자열

                    6: 랜덤한 한글 4글자
                prefix:
                  type: string
                  minLength: 1
                  maxLength: 7
                  description: 고정문자
              required:
                - organization_code
                - account
                - account_name
                - print_type
            examples:
              요청:
                value:
                  organization_code: '89'
                  account: '100000000000'
                  account_name: 컴트루
                  print_type: 3
                  prefix: 일원인증
        description: 요청헤더의 Content-Type과 body 형식이 일치해야 합니다.
      security: []
    parameters: []
components:
  schemas: {}
  securitySchemes: {}
  responses:
    '400':
      description: |
        Bad Request

        사용자가 키를 잘못 입력하였거나, 값에 문제가 있을때

        <details markdown="1">
        <summary>에러메세지</summary>
        "message": "openbanking timeout"<br>
        "message": "oauth failed"<br>
        "message": "API ERROR"<br>
        "message": "print_type is not correct"<br>
        "message": "exceed request limit"<br>
        "message": "too long prefix"<br>
        </details>
        openbanking필드 정보는

        [오픈뱅킹](https://developers.kftc.or.kr/dev/doc/open-banking)

        상단의 오픈뱅킹 홈페이지 3.7. API 응답코드 참고
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              status:
                type: string
                minLength: 1
                description: 상태
                enum:
                  - success
                  - fail
              message:
                type: string
                description: API 에러메세지
              openbanking:
                type: object
                description: '오픈뱅킹 에러코드, 메세지'
                properties:
                  rsp_code:
                    type: string
                    minLength: 1
                    description: 오픈뱅킹 응답코드(API)
                  rsp_message:
                    type: string
                    minLength: 1
                    description: 오픈뱅킹 응답메시지(API)
                  bank_rsp_code:
                    type: string
                    minLength: 1
                    description: 응답코드(참가은행)
                  bank_rsp_message:
                    type: string
                    minLength: 1
                    description: 응답메시지(참가은행)
            required:
              - status
          examples:
            결과:
              value:
                status: fail
                openbanking:
                  rsp_code: A0009
                  rsp_message: API 세부업무 처리실패(리스트 건별 처리결과 확인 요망)
                  bank_rsp_code: '815'
                  bank_rsp_message: '예금주명 불일치 [수취인성명 불일치]'
    '415':
      description: |-
        Unsupported Media Type

        "error": "invalid Content-Type"
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              status:
                type: string
                minLength: 1
              message:
                type: string
                minLength: 1
            required:
              - status
              - message
          examples:
            invalid Content-Type:
              value:
                status: fail
                message: invalid Content-Type
        application/xml:
          schema:
            type: object
            properties: {}
          examples:
            example-1:
              value: {}
